<?php

namespace HungerFirst\HFBundle\Entity\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * CheckoutRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CheckoutRepository extends EntityRepository
{
    /**
     * Finds out if a customer can checkout
     * 
     * @param Customer $customer
     * @param int $dayLimit
     * @return boolean
     */
    public function canCheckout($customer, $dayLimit) {
        
        $currentDate = new \DateTime();
        $nextCheckout = $currentDate->add(new \DateInterval('P'. $dayLimit .'D'));
        
        $query = $this->createQueryBuilder('c')
                ->select('COUNT(c.id)')
                ->where('c.checkoutDate < :nextCheckout')
                ->andWhere('c.customer = :customer')
                ->setParameter('nextCheckout', $nextCheckout)
                ->setParameter('customer', $customer);
        
        return $query->getQuery()->getSingleScalarResult() == 0;
    }
    
    /**
     * Gets last customer checkout
     * 
     * @param Customer $customer
     * @param int $dayLimit
     * @return boolean
     */
    public function getLastOne($customer) {
        
        $query = $this->createQueryBuilder('c')
                ->setMaxResults(1)
                ->andWhere('c.customer = :customer')
                ->orderBy('c.checkoutDate', 'DESC')
                ->setParameter('customer', $customer);
        
        return $query->getQuery()->getSingleResult();
    }
    
    public function countAll() {
        $query = $this->createQueryBuilder('c')
                ->select('COUNT(c.id)');
        return $query->getQuery()->getSingleScalarResult();
    }
    
    public function findByWithLimit($offset, $max) {
        $query = $this->createQueryBuilder('c')
            ->setFirstResult($offset)
            ->setMaxResults($max);

        return $query->getQuery()->getResult();
    }
}